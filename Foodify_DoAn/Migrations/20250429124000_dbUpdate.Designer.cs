// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Foodify_DoAn.Migrations
{
    [DbContext(typeof(FoodifyContext))]
    [Migration("20250429124000_dbUpdate")]
    partial class dbUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Foodify_DoAn.Data.CTCongThuc", b =>
                {
                    b.Property<int>("MaCT")
                        .HasColumnType("integer");

                    b.Property<int>("MaNL")
                        .HasColumnType("integer");

                    b.Property<decimal>("DinhLuong")
                        .HasColumnType("numeric");

                    b.Property<string>("DonViTinh")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MaCT", "MaNL");

                    b.HasIndex("MaNL");

                    b.ToTable("CTCongThuc", (string)null);
                });

            modelBuilder.Entity("Foodify_DoAn.Data.CTDaLuu", b =>
                {
                    b.Property<int>("MaND")
                        .HasColumnType("integer");

                    b.Property<int>("MaCT")
                        .HasColumnType("integer");

                    b.HasKey("MaND", "MaCT");

                    b.HasIndex("MaCT");

                    b.ToTable("CTDaLuu", (string)null);
                });

            modelBuilder.Entity("Foodify_DoAn.Data.CTDaThich", b =>
                {
                    b.Property<int>("MaND")
                        .HasColumnType("integer");

                    b.Property<int>("MaCT")
                        .HasColumnType("integer");

                    b.HasKey("MaND", "MaCT");

                    b.HasIndex("MaCT");

                    b.ToTable("CTDaThich", (string)null);
                });

            modelBuilder.Entity("Foodify_DoAn.Data.Comment", b =>
                {
                    b.Property<int>("MaComment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MaComment"));

                    b.Property<int>("MaBaiViet")
                        .HasColumnType("integer");

                    b.Property<int>("MaND")
                        .HasColumnType("integer");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ThoiGian")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("MaComment");

                    b.HasIndex("MaBaiViet");

                    b.HasIndex("MaND");

                    b.ToTable("Comment", (string)null);
                });

            modelBuilder.Entity("Foodify_DoAn.Data.CongThuc", b =>
                {
                    b.Property<int>("MaCT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MaCT"));

                    b.Property<string>("AnhCT")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("LuotLuu")
                        .HasColumnType("integer");

                    b.Property<int>("LuotShare")
                        .HasColumnType("integer");

                    b.Property<int>("LuotThich")
                        .HasColumnType("integer");

                    b.Property<int>("LuotXem")
                        .HasColumnType("integer");

                    b.Property<int>("MaND")
                        .HasColumnType("integer");

                    b.Property<string>("MoTaCT")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TenCT")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("TongCalories")
                        .HasColumnType("numeric");

                    b.HasKey("MaCT");

                    b.HasIndex("MaND");

                    b.ToTable("CongThuc", (string)null);
                });

            modelBuilder.Entity("Foodify_DoAn.Data.CtDaShare", b =>
                {
                    b.Property<int>("MaShare")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MaShare"));

                    b.Property<int>("MaCT")
                        .HasColumnType("integer");

                    b.Property<int>("MaND")
                        .HasColumnType("integer");

                    b.HasKey("MaShare");

                    b.HasIndex("MaCT");

                    b.HasIndex("MaND");

                    b.ToTable("CtDaShare", (string)null);
                });

            modelBuilder.Entity("Foodify_DoAn.Data.DanhGia", b =>
                {
                    b.Property<int>("MaBL")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MaBL"));

                    b.Property<int>("CongThucMaCT")
                        .HasColumnType("integer");

                    b.Property<int>("Diem")
                        .HasColumnType("integer");

                    b.Property<int>("MaCT")
                        .HasColumnType("integer");

                    b.Property<int?>("MaND")
                        .HasColumnType("integer");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("NguoiDungMaND")
                        .HasColumnType("integer");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MaBL");

                    b.HasIndex("CongThucMaCT");

                    b.HasIndex("NguoiDungMaND");

                    b.ToTable("DanhGia", (string)null);
                });

            modelBuilder.Entity("Foodify_DoAn.Data.NguoiDung", b =>
                {
                    b.Property<int>("MaND")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MaND"));

                    b.Property<string>("AnhDaiDien")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("GioiTinh")
                        .HasColumnType("boolean");

                    b.Property<int>("LuotTheoDoi")
                        .HasColumnType("integer");

                    b.Property<int>("MaTK")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TenND")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TieuSu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MaND");

                    b.HasIndex("MaTK")
                        .IsUnique();

                    b.ToTable("NguoiDung", (string)null);
                });

            modelBuilder.Entity("Foodify_DoAn.Data.NguyenLieu", b =>
                {
                    b.Property<int>("MaNL")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MaNL"));

                    b.Property<string>("AnhNL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal?>("Calories")
                        .HasColumnType("numeric");

                    b.Property<string>("TenNL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MaNL");

                    b.ToTable("NguyenLieu", (string)null);
                });

            modelBuilder.Entity("Foodify_DoAn.Data.TaiKhoan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("TaiKhoan", (string)null);
                });

            modelBuilder.Entity("Foodify_DoAn.Data.TaiKhoanClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TaiKhoan_Claim", (string)null);
                });

            modelBuilder.Entity("Foodify_DoAn.Data.TaiKhoanLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("TaiKhoan_Login", (string)null);
                });

            modelBuilder.Entity("Foodify_DoAn.Data.TaiKhoanToken", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("TaiKhoan_Token", (string)null);
                });

            modelBuilder.Entity("Foodify_DoAn.Data.TaiKhoanVaiTro", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("TaiKhoan_VaiTro", (string)null);
                });

            modelBuilder.Entity("Foodify_DoAn.Data.TheoDoi", b =>
                {
                    b.Property<int>("Following_ID")
                        .HasColumnType("integer");

                    b.Property<int>("Followed_ID")
                        .HasColumnType("integer");

                    b.HasKey("Following_ID", "Followed_ID");

                    b.HasIndex("Followed_ID");

                    b.ToTable("TheoDoi", (string)null);
                });

            modelBuilder.Entity("Foodify_DoAn.Data.ThongBao", b =>
                {
                    b.Property<int>("MaTB")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MaTB"));

                    b.Property<bool>("DaXem")
                        .HasColumnType("boolean");

                    b.Property<int>("MaND")
                        .HasColumnType("integer");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MaTB");

                    b.HasIndex("MaND");

                    b.ToTable("ThongBao", (string)null);
                });

            modelBuilder.Entity("Foodify_DoAn.Data.VaiTro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("VaiTro", (string)null);
                });

            modelBuilder.Entity("Foodify_DoAn.Data.VaiTroClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("VaiTro_Claim", (string)null);
                });

            modelBuilder.Entity("Foodify_DoAn.Data.CTCongThuc", b =>
                {
                    b.HasOne("Foodify_DoAn.Data.CongThuc", "CongThuc")
                        .WithMany("CTCongThucs")
                        .HasForeignKey("MaCT")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Foodify_DoAn.Data.NguyenLieu", "NguyenLieu")
                        .WithMany("CTCongThucs")
                        .HasForeignKey("MaNL")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CongThuc");

                    b.Navigation("NguyenLieu");
                });

            modelBuilder.Entity("Foodify_DoAn.Data.CTDaLuu", b =>
                {
                    b.HasOne("Foodify_DoAn.Data.CongThuc", "CongThuc")
                        .WithMany("CTDaLuus")
                        .HasForeignKey("MaCT")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Foodify_DoAn.Data.NguoiDung", "NguoiDung")
                        .WithMany("CTDaLuus")
                        .HasForeignKey("MaND")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CongThuc");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("Foodify_DoAn.Data.CTDaThich", b =>
                {
                    b.HasOne("Foodify_DoAn.Data.CongThuc", "CongThuc")
                        .WithMany("CTDaThichs")
                        .HasForeignKey("MaCT")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Foodify_DoAn.Data.NguoiDung", "NguoiDung")
                        .WithMany("CTDaThichs")
                        .HasForeignKey("MaND")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CongThuc");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("Foodify_DoAn.Data.Comment", b =>
                {
                    b.HasOne("Foodify_DoAn.Data.CongThuc", "CongThuc")
                        .WithMany("Comments")
                        .HasForeignKey("MaBaiViet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Foodify_DoAn.Data.NguoiDung", "NguoiDung")
                        .WithMany("Comments")
                        .HasForeignKey("MaND")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CongThuc");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("Foodify_DoAn.Data.CongThuc", b =>
                {
                    b.HasOne("Foodify_DoAn.Data.NguoiDung", "NguoiDung")
                        .WithMany("CongThucs")
                        .HasForeignKey("MaND")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("Foodify_DoAn.Data.CtDaShare", b =>
                {
                    b.HasOne("Foodify_DoAn.Data.CongThuc", "CongThuc")
                        .WithMany("CtDaShares")
                        .HasForeignKey("MaCT")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Foodify_DoAn.Data.NguoiDung", "NguoiDung")
                        .WithMany("CtDaShare")
                        .HasForeignKey("MaND")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CongThuc");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("Foodify_DoAn.Data.DanhGia", b =>
                {
                    b.HasOne("Foodify_DoAn.Data.CongThuc", "CongThuc")
                        .WithMany("DanhGias")
                        .HasForeignKey("CongThucMaCT")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Foodify_DoAn.Data.NguoiDung", "NguoiDung")
                        .WithMany("DanhGias")
                        .HasForeignKey("NguoiDungMaND")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CongThuc");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("Foodify_DoAn.Data.NguoiDung", b =>
                {
                    b.HasOne("Foodify_DoAn.Data.TaiKhoan", "TaiKhoan")
                        .WithOne("NguoiDung")
                        .HasForeignKey("Foodify_DoAn.Data.NguoiDung", "MaTK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("Foodify_DoAn.Data.TaiKhoanClaim", b =>
                {
                    b.HasOne("Foodify_DoAn.Data.TaiKhoan", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Foodify_DoAn.Data.TaiKhoanLogin", b =>
                {
                    b.HasOne("Foodify_DoAn.Data.TaiKhoan", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Foodify_DoAn.Data.TaiKhoanToken", b =>
                {
                    b.HasOne("Foodify_DoAn.Data.TaiKhoan", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Foodify_DoAn.Data.TaiKhoanVaiTro", b =>
                {
                    b.HasOne("Foodify_DoAn.Data.VaiTro", "VaiTro")
                        .WithMany("TaiKhoanVaiTros")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Foodify_DoAn.Data.TaiKhoan", "TaiKhoan")
                        .WithMany("TaiKhoanVaiTros")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaiKhoan");

                    b.Navigation("VaiTro");
                });

            modelBuilder.Entity("Foodify_DoAn.Data.TheoDoi", b =>
                {
                    b.HasOne("Foodify_DoAn.Data.NguoiDung", "Followed")
                        .WithMany("Followeds")
                        .HasForeignKey("Followed_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Foodify_DoAn.Data.NguoiDung", "Follower")
                        .WithMany("Followers")
                        .HasForeignKey("Following_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Followed");

                    b.Navigation("Follower");
                });

            modelBuilder.Entity("Foodify_DoAn.Data.ThongBao", b =>
                {
                    b.HasOne("Foodify_DoAn.Data.NguoiDung", "NguoiDung")
                        .WithMany("ThongBaos")
                        .HasForeignKey("MaND")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("Foodify_DoAn.Data.VaiTroClaim", b =>
                {
                    b.HasOne("Foodify_DoAn.Data.VaiTro", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Foodify_DoAn.Data.CongThuc", b =>
                {
                    b.Navigation("CTCongThucs");

                    b.Navigation("CTDaLuus");

                    b.Navigation("CTDaThichs");

                    b.Navigation("Comments");

                    b.Navigation("CtDaShares");

                    b.Navigation("DanhGias");
                });

            modelBuilder.Entity("Foodify_DoAn.Data.NguoiDung", b =>
                {
                    b.Navigation("CTDaLuus");

                    b.Navigation("CTDaThichs");

                    b.Navigation("Comments");

                    b.Navigation("CongThucs");

                    b.Navigation("CtDaShare");

                    b.Navigation("DanhGias");

                    b.Navigation("Followeds");

                    b.Navigation("Followers");

                    b.Navigation("ThongBaos");
                });

            modelBuilder.Entity("Foodify_DoAn.Data.NguyenLieu", b =>
                {
                    b.Navigation("CTCongThucs");
                });

            modelBuilder.Entity("Foodify_DoAn.Data.TaiKhoan", b =>
                {
                    b.Navigation("NguoiDung")
                        .IsRequired();

                    b.Navigation("TaiKhoanVaiTros");
                });

            modelBuilder.Entity("Foodify_DoAn.Data.VaiTro", b =>
                {
                    b.Navigation("TaiKhoanVaiTros");
                });
#pragma warning restore 612, 618
        }
    }
}
